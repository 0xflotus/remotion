(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{132:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return d}));var r=n(3),o=n(7),a=(n(0),n(157)),i={id:"stitch-frames-to-video",title:"stitchFramesToVideo()"},c={unversionedId:"stitch-frames-to-video",id:"stitch-frames-to-video",isDocsHomePage:!1,title:"stitchFramesToVideo()",description:"Part of the @remotion/renderer package.",source:"@site/docs/stitch-frames-to-video.md",slug:"/stitch-frames-to-video",permalink:"/docs/stitch-frames-to-video",editUrl:"https://github.com/JonnyBurger/remotion/edit/main/packages/docs/docs/stitch-frames-to-video.md",version:"current",sidebar:"someSidebar",previous:{title:"renderFrames()",permalink:"/docs/render-frames"},next:{title:"Performance Tips",permalink:"/docs/performance"}},b=[{value:"Arguments",id:"arguments",children:[{value:"<code>dir</code>",id:"dir",children:[]},{value:"<code>fps</code>",id:"fps",children:[]},{value:"<code>width</code>",id:"width",children:[]},{value:"<code>height</code>",id:"height",children:[]},{value:"<code>outputLocation</code>",id:"outputlocation",children:[]},{value:"<code>force</code>",id:"force",children:[]},{value:"<code>assetsInfo</code>",id:"assetsinfo",children:[]},{value:"<code>imageFormat?</code>",id:"imageformat",children:[]},{value:"<code>pixelFormat?</code>",id:"pixelformat",children:[]},{value:"<code>codec?</code>",id:"codec",children:[]},{value:"<code>crf?</code>",id:"crf",children:[]},{value:"<code>onProgress?</code>",id:"onprogress",children:[]},{value:"<code>onDownload?</code>",id:"ondownload",children:[]},{value:"<code>verbose</code>",id:"verbose",children:[]}]},{value:"Return value",id:"return-value",children:[]},{value:"See also",id:"see-also",children:[]}],l={toc:b};function d(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Part of the ",Object(a.b)("inlineCode",{parentName:"em"},"@remotion/renderer")," package.")),Object(a.b)("p",null,"Takes a series of images and audio information generated by ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/render-frames"}),Object(a.b)("inlineCode",{parentName:"a"},"renderFrames()"))," and encodes it to a video."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"const stitchFramesToVideo: (options: {\n  dir: string;\n  fps: number;\n  width: number;\n  height: number;\n  outputLocation: string;\n  force: boolean;\n  assetsInfo: RenderAssetInfo;\n  imageFormat?: 'png' | 'jpeg' | 'none';\n  pixelFormat?: PixelFormat;\n  codec?: Codec;\n  crf?: number;\n  onProgress?: (progress: number) => void;\n  onDownload?: (src: number) => void;\n  verbose?: boolean;\n}) => Promise<void>\n")),Object(a.b)("h2",{id:"arguments"},"Arguments"),Object(a.b)("p",null,"An object with the following properties:"),Object(a.b)("h3",{id:"dir"},Object(a.b)("inlineCode",{parentName:"h3"},"dir")),Object(a.b)("p",null,"A ",Object(a.b)("inlineCode",{parentName:"p"},"string")," containing the absolute path of the directory where the frames are located. This will be the directory where the ",Object(a.b)("inlineCode",{parentName:"p"},"ffmepg")," command will be executed."),Object(a.b)("h3",{id:"fps"},Object(a.b)("inlineCode",{parentName:"h3"},"fps")),Object(a.b)("p",null,"A ",Object(a.b)("inlineCode",{parentName:"p"},"number")," specifying the desired frame rate of the output video."),Object(a.b)("h3",{id:"width"},Object(a.b)("inlineCode",{parentName:"h3"},"width")),Object(a.b)("p",null,"A ",Object(a.b)("inlineCode",{parentName:"p"},"number")," specifying the desired output width in pixels for the video."),Object(a.b)("h3",{id:"height"},Object(a.b)("inlineCode",{parentName:"h3"},"height")),Object(a.b)("p",null,"A ",Object(a.b)("inlineCode",{parentName:"p"},"number")," specifying the desired output height in pixels for the video."),Object(a.b)("h3",{id:"outputlocation"},Object(a.b)("inlineCode",{parentName:"h3"},"outputLocation")),Object(a.b)("p",null,"An absolute path specify where the output file should be written to."),Object(a.b)("h3",{id:"force"},Object(a.b)("inlineCode",{parentName:"h3"},"force")),Object(a.b)("p",null,"Whether in case of an existing file in ",Object(a.b)("inlineCode",{parentName:"p"},"outputLocation")," it should be overwritten. Type ",Object(a.b)("inlineCode",{parentName:"p"},"boolean"),"."),Object(a.b)("h3",{id:"assetsinfo"},Object(a.b)("inlineCode",{parentName:"h3"},"assetsInfo")),Object(a.b)("p",null,"Information about the audio mix. This is part of the return value of ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/render-frames#return-value"}),"renderFrames()"),"."),Object(a.b)("h3",{id:"imageformat"},Object(a.b)("inlineCode",{parentName:"h3"},"imageFormat?")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"optional")),Object(a.b)("p",null,"Either ",Object(a.b)("inlineCode",{parentName:"p"},"jpeg"),", ",Object(a.b)("inlineCode",{parentName:"p"},"png")," or ",Object(a.b)("inlineCode",{parentName:"p"},"none"),". It should match what you passed into the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/render-frames#imageformat"}),"renderFrames()")," function."),Object(a.b)("div",{className:"admonition admonition-info alert alert--info"},Object(a.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(a.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(a.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"For backwards compatibility, if you omit this parameter, it will use ",Object(a.b)("inlineCode",{parentName:"p"},"'png'"),". Make sure to explicitly set this to ",Object(a.b)("inlineCode",{parentName:"p"},"jpeg")," to take advantage of faster rendering."))),Object(a.b)("h3",{id:"pixelformat"},Object(a.b)("inlineCode",{parentName:"h3"},"pixelFormat?")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"optional")),Object(a.b)("p",null,"Sets the pixel format. See ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/config#setpixelformat"}),"here")," for available values. The default is ",Object(a.b)("inlineCode",{parentName:"p"},"yuv420p"),"."),Object(a.b)("h3",{id:"codec"},Object(a.b)("inlineCode",{parentName:"h3"},"codec?")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"optional")),Object(a.b)("p",null,"Set a codec. See the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/encoding"}),"encoding guide")," for available values and guidance on which one to choose. The default is ",Object(a.b)("inlineCode",{parentName:"p"},"h264"),"."),Object(a.b)("h3",{id:"crf"},Object(a.b)("inlineCode",{parentName:"h3"},"crf?")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"optional")),Object(a.b)("p",null,"The constant rate factor of the output, a parameter which controls quality. See ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/config#setcrf"}),"here")," for more information about this parameter. Default is depending on the codec."),Object(a.b)("h3",{id:"onprogress"},Object(a.b)("inlineCode",{parentName:"h3"},"onProgress?")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"optional")),Object(a.b)("p",null,"Callback function which informs about the encoding progress. The ",Object(a.b)("inlineCode",{parentName:"p"},"progress")," value is a ",Object(a.b)("inlineCode",{parentName:"p"},"number")," between 0 and 1."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"const onProgress = (progress: number) => {\n  console.log(`Encoding progress: ${progress * 100}%`)\n}\n")),Object(a.b)("h3",{id:"ondownload"},Object(a.b)("inlineCode",{parentName:"h3"},"onDownload?")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"optional")),Object(a.b)("p",null,"Notifies when a remote asset needs to be downloaded in order to extract the audio track."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"const onDownload = (src: string) => {\n  console.log(`Downloading ${src}...`)\n}\n")),Object(a.b)("h3",{id:"verbose"},Object(a.b)("inlineCode",{parentName:"h3"},"verbose")),Object(a.b)("p",null,"A boolean value that when set to ",Object(a.b)("inlineCode",{parentName:"p"},"true"),", will log all kinds of debug information. Default ",Object(a.b)("inlineCode",{parentName:"p"},"false")),Object(a.b)("h2",{id:"return-value"},"Return value"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"stitchFramesToVideo()")," returns a promise which resolves to nothing. If everything goes well, the output will be placed in ",Object(a.b)("inlineCode",{parentName:"p"},"outputLocation"),"."),Object(a.b)("h2",{id:"see-also"},"See also"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/bundle"}),"bundle()")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/ssr"}),"Server-Side rendering")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/get-compositions"}),"getCompositions()")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/render-frames"}),"renderFrames()"))))}d.isMDXComponent=!0},157:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),d=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=d(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=b(e,["components","mdxType","originalType","parentName"]),p=d(n),m=r,u=p["".concat(i,".").concat(m)]||p[m]||s[m]||a;return n?o.a.createElement(u,c(c({ref:t},l),{},{components:n})):o.a.createElement(u,c({ref:t},l))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);